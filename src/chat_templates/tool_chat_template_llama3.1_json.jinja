{{- bos_token }}
{%- if custom_tools is defined %}
    {%- set tools = custom_tools %}
{%- endif %}
{%- if not tools_in_user_message is defined %}
    {# Llama 3.1 does not pass all tests if tools are only in the system prompt #}
    {%- set tools_in_user_message = true %}
{%- endif %}
{%- if not date_string is defined %}
    {%- if strftime_now is defined %}
        {%- set date_string = strftime_now("%d %b %Y") %}
    {%- else %}
        {%- set date_string = "26 Jul 2024" %}
    {%- endif %}
{%- endif %}

{# Normalize tools to a list so length checks never hit None #}
{%- set tools = tools | default([], true) %}

{# Extract system message so we can place it correctly #}
{%- if messages and messages[0]['role'] == 'system' %}
    {%- set _sys = messages[0]['content'] %}
    {%- if _sys is string %}
        {%- set system_message = _sys | trim %}
    {%- elif _sys is iterable %}
        {%- set system_message = (_sys
            | selectattr('type', 'equalto', 'text')
            | map(attribute='text')
            | map('trim')
            | join('\n')) | trim %}
    {%- else %}
        {%- set system_message = "" %}
    {%- endif %}
    {%- set messages = messages[1:] %}
{%- else %}
    {%- if tools | length > 0 %}
        {%- set system_message = "You are a helpful assistant with tool calling capabilities. Only reply with a tool call if the function exists in the library provided by the user. If it does not exist, reply directly in natural language. When you receive a tool call response, use the output to format an answer to the original user question." %}
    {%- else %}
        {%- set system_message = "" %}
    {%- endif %}
{%- endif %}

{{- "<|start_header_id|>system<|end_header_id|>\n\n" }}
{%- if tools | length > 0 %}
    {{- "Environment: ipython\n" }}
{%- endif %}
{{- "Cutting Knowledge Date: December 2023\n" }}
{{- "Today Date: " + date_string + "\n\n" }}

{%- if tools | length > 0 and not tools_in_user_message %}
    {{- "You have access to the following functions. To call a function, respond with JSON for a function call. " }}
    {{- 'Respond in the format {"name": function name, "parameters": dictionary of argument name and its value}. ' }}
    {{- "Do not use variables.\n\n" }}
    {%- for t in tools %}
        {{- t | tojson(indent=4) }}
        {{- "\n\n" }}
    {%- endfor %}
{%- endif %}
{{- system_message }}
{{- "<|eot_id|>" }}

{# Tools in first user message, if selected #}
{%- if tools_in_user_message and tools | length > 0 %}
    {%- if messages | length != 0 %}
        {%- set _u0 = messages[0]['content'] %}
        {%- if _u0 is string %}
            {%- set first_user_message = _u0 | trim %}
        {%- elif _u0 is iterable %}
            {%- set first_user_message = (_u0
                | selectattr('type', 'equalto', 'text')
                | map(attribute='text')
                | map('trim')
                | join('\n')) | trim %}
        {%- else %}
            {%- set first_user_message = "" %}
        {%- endif %}
        {%- set messages = messages[1:] %}
    {%- else %}
        {{- raise_exception("Cannot put tools in the first user message when there is no first user message.") }}
    {%- endif %}
    {{- '<|start_header_id|>user<|end_header_id|>\n\n' -}}
    {{- "Given the following functions, respond with a JSON function call with proper arguments that best answers the prompt.\n\n" }}
    {{- 'Respond in the format {"name": function name, "parameters": dictionary of argument name and its value}. ' }}
    {{- "Do not use variables.\n\n" }}
    {%- for t in tools %}
        {{- t | tojson(indent=4) }}
        {{- "\n\n" }}
    {%- endfor %}
    {{- first_user_message + "<|eot_id|>"}}
{%- endif %}

{# Conversation turns #}
{%- for message in messages %}
    {%- set role = message['role'] %}
    {%- set content = message['content'] %}
    {%- set tool_calls = message.tool_calls | default([], true) %}

    {# Tool or ipython outputs #}
    {%- if role == 'ipython' or role == 'tool' %}
        {{- "<|start_header_id|>ipython<|end_header_id|>\n\n" }}
        {%- if content is string %}
            {{- {"output": content} | tojson }}
        {%- elif content is iterable %}
            {%- for c in content %}
                {%- if c['type'] == 'text' %}
                    {{- {"output": c['text']} | tojson }}
                {%- endif %}
            {%- endfor %}
        {%- else %}
            {{- {"output": ""} | tojson }}
        {%- endif %}
        {{- "<|eot_id|>" }}

    {# Assistant tool call messages, single call only #}
    {%- elif tool_calls | length > 0 %}
        {%- set tc = (tool_calls | first).function %}
        {%- set args = tc.arguments -%}
        {{- "<|start_header_id|>assistant<|end_header_id|>\n\n" -}}
        {{- '{"name": "' + tc.name + '", "parameters": ' -}}
        {%- if args is string -%}
            {{- args -}}
        {%- else -%}
            {{- args | tojson -}}
        {%- endif -%}
        {{- "}" -}}
        {{- "<|eot_id|>" }}

    {# Plain user or assistant messages #}
    {%- else %}
        {{- "<|start_header_id|>" + role + "<|end_header_id|>\n\n" }}
        {%- if content is string %}
            {{- content | trim }}
        {%- elif content is iterable %}
            {%- for c in content %}
                {%- if c['type'] == 'text' %}
                    {{- c['text'] | trim }}
                {%- endif %}
            {%- endfor %}
        {%- endif %}
        {{- "<|eot_id|>" }}
    {%- endif %}
{%- endfor %}

{%- if add_generation_prompt %}
    {{- "<|start_header_id|>assistant<|end_header_id|>\n\n" }}
{%- endif %}

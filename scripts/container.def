Bootstrap: docker
From: python:3.11-slim

%help
    Container for TTC project with uv for dependency management.
    This container includes CUDA support for GPU training.

%files
    # Copy project files into the container
    pyproject.toml /opt/ttc/pyproject.toml
    uv.lock /opt/ttc/uv.lock
    .python-version /opt/ttc/.python-version
    src/ /opt/ttc/src

%post
    # Install system dependencies and uv
    apt-get update && apt-get install -y build-essential curl git && rm -rf /var/lib/apt/lists/*
    curl -LsSf https://astral.sh/uv/install.sh | sh
    echo 'export PATH="/root/.cargo/bin:$PATH"' >> /environment
    export PATH="/root/.cargo/bin:$PATH"
    
    # Set up Python environment
    cd /opt/ttc
    uv sync
    
    # Set up CUDA environment variables
    echo 'export LD_LIBRARY_PATH="/usr/local/cuda/lib64:$LD_LIBRARY_PATH"' >> /environment

%environment
    # Set environment variables
    export PATH="/root/.cargo/bin:$PATH"
    export PYTHONPATH="/opt/ttc:$PYTHONPATH"
    export PYTHONUNBUFFERED=1
    
    # Activate virtual environment in the container
    export VIRTUAL_ENV="/opt/ttc/.venv"
    export PATH="/opt/ttc/.venv/bin:$PATH"

%runscript
    # Default command when container is run without arguments
    cd /opt/ttc
    exec uv run "$@"

%apprun train
    # Run training script
    cd /opt/ttc
    exec uv run torchrun --nproc-per-node=${GPUS:-1} src/train_grpo.py +experiment=${CONFIG:-base_grpo_config}

%apprun train-unsloth
    # Run unsloth training script
    cd /opt/ttc
    exec uv run torchrun --nproc-per-node=${GPUS:-1} src/train_grpo_unsloth.py +experiment=${CONFIG:-base_grpo_config}

%apprun test
    # Run test script
    cd /opt/ttc
    exec uv run python src/test_model.py ${CONFIG:-base_test_config}

%labels
    Author TTC
    Version 0.1.0 